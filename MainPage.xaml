<Page
    x:Class="Achievr.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Achievr"
    xmlns:data="using:Achievr.ViewModel"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <SolidColorBrush x:Key="achievement-unlocked-color" Color="#FFF5E752"/>
        <SolidColorBrush x:Key="achievement-locked-color" Color="#FF7097A0"/>
        <SolidColorBrush x:Key="flyout-background-brush" Color="#FF105868"/>
        <Style x:Key="flyout-presenter-style" TargetType="FlyoutPresenter">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style x:Key="alt-achievement-container-style" TargetType="Grid">
            <Setter Property="Height" Value="80"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Canvas.ZIndex" Value="10"/>
        </Style>
        <Style x:Key="achievement-score-text" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,2,2,0"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="achievement-title-text" TargetType="TextBlock">
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Grid.Row" Value="1"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style x:Key="achievement-dependency-line" TargetType="Line">
            <Setter Property="StrokeThickness" Value="4"/>
        </Style>
        <Flyout x:Key="NewAchievementTreeNameDialog"
                x:Name="NewAchievementTreeNameDialog"
                FlyoutPresenterStyle="{StaticResource flyout-presenter-style}">
            <StackPanel
                Background="{StaticResource flyout-background-brush}"
                Padding="5">
                <TextBox
                    x:Name="NewAchievementNameBox"
                    Width="300"
                    PlaceholderText="Enter name..."
                    MaxLength="20">
                    <TextBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Name your tree" Foreground="White"/>
                        </DataTemplate>
                    </TextBox.HeaderTemplate>
                </TextBox>
                <Button
                    x:Name="NewAchievementCreateButton"
                    Content="Create"
                    Foreground="White"
                    Margin="0,5,0,0"
                    Click="NewAchievementCreateButton_Click"/>
            </StackPanel>
        </Flyout>
        <Flyout x:Key="NewAchievementMenu"
                x:Name="NewAchievementMenu"
                Placement="Top"
                FlyoutPresenterStyle="{StaticResource flyout-presenter-style}">
            <StackPanel
                Background="{StaticResource flyout-background-brush}"
                Padding="5">
                <TextBlock
                    Text="Create a new achievement"
                    Foreground="White"
                    FontSize="24"/>
                <TextBox
                    PlaceholderText="Enter title..."
                    MaxLength="40"
                    Text="{x:Bind ActiveTreeViewModel.Active.Title, Mode=TwoWay, FallbackValue=''}">
                    <TextBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Title" Foreground="White"/>
                        </DataTemplate>
                    </TextBox.HeaderTemplate>
                </TextBox>
                <TextBox
                    PlaceholderText="Enter description..."
                    MaxLength="300"
                    Text="{x:Bind ActiveTreeViewModel.Active.Description, Mode=TwoWay, FallbackValue=''}">
                    <TextBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Description" Foreground="White"/>
                        </DataTemplate>
                    </TextBox.HeaderTemplate>
                </TextBox>
                <TextBox
                    InputScope="Digits"
                    Text="{x:Bind ActiveTreeViewModel.Active.ScoreValue, Mode=TwoWay, FallbackValue=10}">
                    <TextBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Score value" Foreground="White"/>
                        </DataTemplate>
                    </TextBox.HeaderTemplate>
                </TextBox>
                <Button
                    x:Name="NewAchievementMenuDoneButton"
                    Content="Done"
                    Foreground="White"
                    Margin="5,5,5,5"
                    Click="NewAchievementMenuDoneButton_Click"/>
            </StackPanel>
        </Flyout>
        <Flyout
            x:Key="EditAchievementMenu"
            x:Name="EditAchievementMenu"
            Placement="Top"
            FlyoutPresenterStyle="{StaticResource flyout-presenter-style}">
            <StackPanel
                Padding="5"
                Background="{StaticResource flyout-background-brush}">
                <TextBlock
                    Text="Edit achievement"
                    Foreground="White"
                    FontSize="24"/>
                <TextBox
                    MaxLength="40"
                    Text="{x:Bind ActiveTreeViewModel.Active.SelectedNode.Node.Title, Mode=TwoWay, FallbackValue=''}">
                    <TextBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Title" Foreground="White"/>
                        </DataTemplate>
                    </TextBox.HeaderTemplate>
                </TextBox>
                <TextBox
                    MaxLength="300"
                    Text="{x:Bind ActiveTreeViewModel.Active.SelectedNode.Node.Description, Mode=TwoWay, FallbackValue=''}">
                    <TextBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Description" Foreground="White"/>
                        </DataTemplate>
                    </TextBox.HeaderTemplate>
                </TextBox>
                <TextBox
                    InputScope="Digits"
                    Text="{x:Bind ActiveTreeViewModel.Active.ScoreValue, Mode=TwoWay, FallbackValue=10}">
                    <TextBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Score value" Foreground="White"/>
                        </DataTemplate>
                    </TextBox.HeaderTemplate>
                </TextBox>
                <StackPanel
                    Margin="10,10,10,0"
                    BorderThickness="2">
                    <StackPanel.BorderBrush>
                        <SolidColorBrush Color="Black" Opacity="0.2"/>
                    </StackPanel.BorderBrush>
                    <TextBlock
                        Text="Dependent on:"
                        Margin="5,0,0,0"
                        Foreground="White"/>
                    <ListView
                        x:Name="AchievementDependencyList"
                        ItemsSource="{x:Bind ActiveTreeViewModel.Active.SelectedNode.DependsOn, Mode=OneWay}"
                        SelectedIndex="{x:Bind ActiveTreeViewModel.Active.SelectedNode.SelectedDependencyIndex, Mode=TwoWay}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel
                                    Margin="5,5,5,0"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="MinHeight" Value="18"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="data:AchievementNodeViewModel">
                                <TextBlock
                                    Text="{x:Bind Node.Title}"
                                    Foreground="White"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button
                        Content="Remove"
                        Foreground="White"
                        Margin="5,5,0,5"
                        Click="{x:Bind ActiveTreeViewModel.Active.SelectedNode.DeleteDependency}"/>
                    <TextBlock
                        Text="Does not depend on:"
                        Foreground="White"
                        Margin="5,0,0,0"/>
                    <ListView
                        x:Name="AchievementAddableDependenciesList"
                        ItemsSource="{x:Bind ActiveTreeViewModel.Active.SelectedNode.AvailableDependencies, Mode=OneWay}"
                        SelectedIndex="{x:Bind ActiveTreeViewModel.Active.SelectedNode.SelectedAvailableDependencyIndex, Mode=TwoWay}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel
                                    Margin="5,5,5,0"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="MinHeight" Value="18"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="data:AchievementNodeViewModel">
                                <TextBlock
                                    Text="{x:Bind Node.Title}"
                                    Foreground="White"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button
                        Content="Add"
                        Margin="5"
                        Foreground="White"
                        Click="{x:Bind ActiveTreeViewModel.Active.SelectedNode.AddDependency}"/>
                </StackPanel>
                <StackPanel
                    Orientation="Horizontal">
                    <Button
                        x:Name="EditAchievementDoneButton"
                        Content="Done"
                        Foreground="White"
                        Margin="5,5,0,5"
                        Click="EditAchievementDoneButton_Click"/>
                    <Button
                        x:Name="EditAchievementDeleteButton"
                        Content="Delete"
                        Foreground="White"
                        Margin="5,5,0,5"
                        Click="EditAchievementDeleteButton_Click"/>
                </StackPanel>
            </StackPanel>
        </Flyout>
    </Page.Resources>
    <SplitView
        x:Name="mainSplitView"
        DisplayMode="Overlay"
        IsPaneOpen="False"
        OpenPaneLength="300"
        CompactPaneLength="48">
        <SplitView.Background>
            <LinearGradientBrush
                StartPoint="0,0.5"
                EndPoint="1,0.5">
                <GradientStop Offset="0" Color="#FF042038"/>
                <GradientStop Offset="0.5" Color="#FF0E4E5D"/>
                <GradientStop Offset="1" Color="#FF042038"/>
            </LinearGradientBrush>
        </SplitView.Background>
        <SplitView.Pane>
            <StackPanel>
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                        <GradientStop Color="#FF105868" Offset="0"/>
                        <GradientStop Color="#FF084E5D" Offset="1"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="0"
                        x:Name="paneHamburgerButton"
                        Click="hamburgerButton_Click"
                        Background="Transparent"
                        Foreground="LightGray"
                        Width="50"
                        Height="50"
                        FontFamily="Segoe MDL2 Assets"
                        Content="&#xE700;"/>
                    <TextBlock
                        Grid.Column="1"
                        Text="Saved achievement trees"
                        FontSize="18"
                        Foreground="White"
                        VerticalAlignment="Center"
                        Width="Auto"/>
                    <Button
                        Grid.Column="2"
                    	x:Name="paneAddButton"
                        Flyout="{StaticResource NewAchievementTreeNameDialog}"
                    	Background="Transparent"
                    	Foreground="LightGray"
                    	Width="50"
                    	Height="50"
                    	FontFamily="Segoe MDL2 Assets"
                    	Content="&#xE710;"
                        ToolTipService.ToolTip="Create a new achievement tree..."/>
                </Grid>
                <ListView
                    ItemsSource="{x:Bind SavedTreesViewModel.Trees, Mode=OneWay}"
                    SelectedIndex="{x:Bind SavedTreesViewModel.SelectedIndex, Mode=TwoWay}"
                    MinWidth="300"
                    MinHeight="50">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="data:AchievementTreeViewModel">
                            <StackPanel Orientation="Horizontal">
                                <Canvas
                                    Width="50"
                                    Height="50">
                                    <Ellipse
                                        Canvas.Left="0"
                                        Canvas.Top="0"
                                        Fill="#FFFFE901"
                                        Height="50"
                                        Width="50"/>
                                    <TextBlock
                                        Canvas.Top="15"
                                        Height="50"
                                        Width="50"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        TextAlignment="Center"
                                        Text="{x:Bind Score, Mode=OneWay}"/>
                                </Canvas>
                                <TextBlock
                                    Text="{x:Bind Name}"
                                    Foreground="White"
                                    Margin="5,0,0,0"
                                    VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel Orientation="Horizontal">
                    <Button
                        Margin="13,5,5,0"
                        Content="&#xE74D;"
                        FontFamily="Segoe MDL2 Assets"
                        Background="Transparent"
                        Foreground="LightGray"
                        Width="50"
                        Height="50"
                        Click="{x:Bind SavedTreesViewModel.DeleteTree}"/>
                    <Button
                        x:Name="OpenTreeButton"
                        Content="Open"
                        Foreground="White"
                        Click="OpenTreeButton_Click"/>
                </StackPanel>
            </StackPanel>
        </SplitView.Pane>
        <SplitView.Content>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid
                    Grid.Row="0"
                    BorderThickness="2"
                    Height="50">
                    <Grid.Background>
                        <SolidColorBrush Color="White" Opacity="0.3"/>
                    </Grid.Background>
                    <Grid.BorderBrush>
                        <SolidColorBrush Color="#FF042334" Opacity="0.4"/>
                    </Grid.BorderBrush>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="0"
                        x:Name="hamburgerButton"
                        Click="hamburgerButton_Click"
                        Background="Transparent"
                        Width="50"
                        Height="50"
                        FontFamily="Segoe MDL2 Assets"
                        Content="&#xE700;"/>
                    <TextBlock
                        Grid.Column="1"
                        Text="{x:Bind ActiveTreeViewModel.Active.Name, Mode=OneWay, FallbackValue=Achievr}"
                        FontFamily="Arial"
                        FontSize="32"
                        Foreground="#FF2E2D2D"
                        TextAlignment="Center"
                        VerticalAlignment="Center"/>
                    <ToggleButton
                        Grid.Column="2"
                        x:Name="editButton"
                        IsEnabled="{x:Bind ActiveTreeViewModel.HasTreeLoaded, Mode=OneWay}"
                        Background="Transparent"
                        Width="50"
                        Height="50"
                        FontFamily="Segoe MDL2 Assets"
                        Content="&#xE70F;"/>
                </Grid>
                <Canvas
                    Grid.Row="1"
                    x:Name="mainCanvas"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Background="Transparent"
                    IsTapEnabled="True"
                    PointerPressed="mainCanvas_PointerPressed">
                </Canvas>
            </Grid>
        </SplitView.Content>
    </SplitView>
</Page>
